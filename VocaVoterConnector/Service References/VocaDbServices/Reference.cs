//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MikuBot.VocaDBConnector.VocaDbServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NameMatchMode", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Service")]
    public enum NameMatchMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Auto = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Partial = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StartsWith = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exact = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Words = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlbumSortRule", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Service")]
    public enum AlbumSortRule : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Name = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReleaseDate = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReleaseDateWithNulls = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdditionDate = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RatingAverage = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RatingTotal = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NameThenReleaseDate = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollectionCount = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartialFindResultOfAlbumContractZKwwigZK", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class PartialFindResultOfAlbumContractZKwwigZK : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.AlbumContract[] ItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TermField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.AlbumContract[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Term {
            get {
                return this.TermField;
            }
            set {
                if ((object.ReferenceEquals(this.TermField, value) != true)) {
                    this.TermField = value;
                    this.RaisePropertyChanged("Term");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlbumContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MikuBot.VocaDBConnector.VocaDbServices.AlbumDetailsContract))]
    public partial class AlbumContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtistStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoverPictureMimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.DiscType DiscTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RatingAverageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RatingCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.OptionalDateTimeContract ReleaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ReleaseEventForApiContract ReleaseEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalNames {
            get {
                return this.AdditionalNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalNamesField, value) != true)) {
                    this.AdditionalNamesField = value;
                    this.RaisePropertyChanged("AdditionalNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArtistString {
            get {
                return this.ArtistStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistStringField, value) != true)) {
                    this.ArtistStringField = value;
                    this.RaisePropertyChanged("ArtistString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoverPictureMime {
            get {
                return this.CoverPictureMimeField;
            }
            set {
                if ((object.ReferenceEquals(this.CoverPictureMimeField, value) != true)) {
                    this.CoverPictureMimeField = value;
                    this.RaisePropertyChanged("CoverPictureMime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.DiscType DiscType {
            get {
                return this.DiscTypeField;
            }
            set {
                if ((this.DiscTypeField.Equals(value) != true)) {
                    this.DiscTypeField = value;
                    this.RaisePropertyChanged("DiscType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RatingAverage {
            get {
                return this.RatingAverageField;
            }
            set {
                if ((this.RatingAverageField.Equals(value) != true)) {
                    this.RatingAverageField = value;
                    this.RaisePropertyChanged("RatingAverage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RatingCount {
            get {
                return this.RatingCountField;
            }
            set {
                if ((this.RatingCountField.Equals(value) != true)) {
                    this.RatingCountField = value;
                    this.RaisePropertyChanged("RatingCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.OptionalDateTimeContract ReleaseDate {
            get {
                return this.ReleaseDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ReleaseDateField, value) != true)) {
                    this.ReleaseDateField = value;
                    this.RaisePropertyChanged("ReleaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ReleaseEventForApiContract ReleaseEvent {
            get {
                return this.ReleaseEventField;
            }
            set {
                if ((object.ReferenceEquals(this.ReleaseEventField, value) != true)) {
                    this.ReleaseEventField = value;
                    this.RaisePropertyChanged("ReleaseEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OptionalDateTimeContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class OptionalDateTimeContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormattedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEmptyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Day {
            get {
                return this.DayField;
            }
            set {
                if ((this.DayField.Equals(value) != true)) {
                    this.DayField = value;
                    this.RaisePropertyChanged("Day");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Formatted {
            get {
                return this.FormattedField;
            }
            set {
                if ((object.ReferenceEquals(this.FormattedField, value) != true)) {
                    this.FormattedField = value;
                    this.RaisePropertyChanged("Formatted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEmpty {
            get {
                return this.IsEmptyField;
            }
            set {
                if ((this.IsEmptyField.Equals(value) != true)) {
                    this.IsEmptyField = value;
                    this.RaisePropertyChanged("IsEmpty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Month {
            get {
                return this.MonthField;
            }
            set {
                if ((this.MonthField.Equals(value) != true)) {
                    this.MonthField = value;
                    this.RaisePropertyChanged("Month");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReleaseEventForApiContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class ReleaseEventForApiContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistForEventContract[] ArtistsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EventCategory CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryThumbForApiContract MainPictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.LocalizedStringContract[] NamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ReleaseEventSeriesContract SeriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SeriesIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeriesNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeriesSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.SongListBaseContract SongListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlSlugField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VenueNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.WebLinkForApiContract[] WebLinksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string AdditionalNames {
            get {
                return this.AdditionalNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalNamesField, value) != true)) {
                    this.AdditionalNamesField = value;
                    this.RaisePropertyChanged("AdditionalNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistForEventContract[] Artists {
            get {
                return this.ArtistsField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistsField, value) != true)) {
                    this.ArtistsField = value;
                    this.RaisePropertyChanged("Artists");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EventCategory Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((this.CategoryField.Equals(value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryThumbForApiContract MainPicture {
            get {
                return this.MainPictureField;
            }
            set {
                if ((object.ReferenceEquals(this.MainPictureField, value) != true)) {
                    this.MainPictureField = value;
                    this.RaisePropertyChanged("MainPicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.LocalizedStringContract[] Names {
            get {
                return this.NamesField;
            }
            set {
                if ((object.ReferenceEquals(this.NamesField, value) != true)) {
                    this.NamesField = value;
                    this.RaisePropertyChanged("Names");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.ReleaseEventSeriesContract Series {
            get {
                return this.SeriesField;
            }
            set {
                if ((object.ReferenceEquals(this.SeriesField, value) != true)) {
                    this.SeriesField = value;
                    this.RaisePropertyChanged("Series");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SeriesId {
            get {
                return this.SeriesIdField;
            }
            set {
                if ((this.SeriesIdField.Equals(value) != true)) {
                    this.SeriesIdField = value;
                    this.RaisePropertyChanged("SeriesId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeriesNumber {
            get {
                return this.SeriesNumberField;
            }
            set {
                if ((this.SeriesNumberField.Equals(value) != true)) {
                    this.SeriesNumberField = value;
                    this.RaisePropertyChanged("SeriesNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeriesSuffix {
            get {
                return this.SeriesSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.SeriesSuffixField, value) != true)) {
                    this.SeriesSuffixField = value;
                    this.RaisePropertyChanged("SeriesSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.SongListBaseContract SongList {
            get {
                return this.SongListField;
            }
            set {
                if ((object.ReferenceEquals(this.SongListField, value) != true)) {
                    this.SongListField = value;
                    this.RaisePropertyChanged("SongList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrlSlug {
            get {
                return this.UrlSlugField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlSlugField, value) != true)) {
                    this.UrlSlugField = value;
                    this.RaisePropertyChanged("UrlSlug");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VenueName {
            get {
                return this.VenueNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VenueNameField, value) != true)) {
                    this.VenueNameField = value;
                    this.RaisePropertyChanged("VenueName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.WebLinkForApiContract[] WebLinks {
            get {
                return this.WebLinksField;
            }
            set {
                if ((object.ReferenceEquals(this.WebLinksField, value) != true)) {
                    this.WebLinksField = value;
                    this.RaisePropertyChanged("WebLinks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlbumDetailsContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class AlbumDetailsContract : MikuBot.VocaDBConnector.VocaDbServices.AlbumContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.AlbumForUserContract AlbumForUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistForAlbumContract[] ArtistLinksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommentCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EnglishTranslatedString DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, MikuBot.VocaDBConnector.VocaDbServices.AlbumDiscPropertiesContract> DiscsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.CommentForApiContract[] LatestCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.AlbumContract MergedToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.AlbumReleaseContract OriginalReleaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OwnedCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.PVContract[] PVsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistForApiContract PersonalDescriptionAuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonalDescriptionTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryPictureFileContract[] PicturesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.SongInAlbumContract[] SongsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.TagUsageForApiContract[] TagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan TotalLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.WebLinkContract[] WebLinksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WishlistCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.AlbumForUserContract AlbumForUser {
            get {
                return this.AlbumForUserField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumForUserField, value) != true)) {
                    this.AlbumForUserField = value;
                    this.RaisePropertyChanged("AlbumForUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistForAlbumContract[] ArtistLinks {
            get {
                return this.ArtistLinksField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistLinksField, value) != true)) {
                    this.ArtistLinksField = value;
                    this.RaisePropertyChanged("ArtistLinks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommentCount {
            get {
                return this.CommentCountField;
            }
            set {
                if ((this.CommentCountField.Equals(value) != true)) {
                    this.CommentCountField = value;
                    this.RaisePropertyChanged("CommentCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EnglishTranslatedString Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, MikuBot.VocaDBConnector.VocaDbServices.AlbumDiscPropertiesContract> Discs {
            get {
                return this.DiscsField;
            }
            set {
                if ((object.ReferenceEquals(this.DiscsField, value) != true)) {
                    this.DiscsField = value;
                    this.RaisePropertyChanged("Discs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Hits {
            get {
                return this.HitsField;
            }
            set {
                if ((this.HitsField.Equals(value) != true)) {
                    this.HitsField = value;
                    this.RaisePropertyChanged("Hits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.CommentForApiContract[] LatestComments {
            get {
                return this.LatestCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestCommentsField, value) != true)) {
                    this.LatestCommentsField = value;
                    this.RaisePropertyChanged("LatestComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.AlbumContract MergedTo {
            get {
                return this.MergedToField;
            }
            set {
                if ((object.ReferenceEquals(this.MergedToField, value) != true)) {
                    this.MergedToField = value;
                    this.RaisePropertyChanged("MergedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.AlbumReleaseContract OriginalRelease {
            get {
                return this.OriginalReleaseField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalReleaseField, value) != true)) {
                    this.OriginalReleaseField = value;
                    this.RaisePropertyChanged("OriginalRelease");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OwnedCount {
            get {
                return this.OwnedCountField;
            }
            set {
                if ((this.OwnedCountField.Equals(value) != true)) {
                    this.OwnedCountField = value;
                    this.RaisePropertyChanged("OwnedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.PVContract[] PVs {
            get {
                return this.PVsField;
            }
            set {
                if ((object.ReferenceEquals(this.PVsField, value) != true)) {
                    this.PVsField = value;
                    this.RaisePropertyChanged("PVs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistForApiContract PersonalDescriptionAuthor {
            get {
                return this.PersonalDescriptionAuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonalDescriptionAuthorField, value) != true)) {
                    this.PersonalDescriptionAuthorField = value;
                    this.RaisePropertyChanged("PersonalDescriptionAuthor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonalDescriptionText {
            get {
                return this.PersonalDescriptionTextField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonalDescriptionTextField, value) != true)) {
                    this.PersonalDescriptionTextField = value;
                    this.RaisePropertyChanged("PersonalDescriptionText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryPictureFileContract[] Pictures {
            get {
                return this.PicturesField;
            }
            set {
                if ((object.ReferenceEquals(this.PicturesField, value) != true)) {
                    this.PicturesField = value;
                    this.RaisePropertyChanged("Pictures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.SongInAlbumContract[] Songs {
            get {
                return this.SongsField;
            }
            set {
                if ((object.ReferenceEquals(this.SongsField, value) != true)) {
                    this.SongsField = value;
                    this.RaisePropertyChanged("Songs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.TagUsageForApiContract[] Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan TotalLength {
            get {
                return this.TotalLengthField;
            }
            set {
                if ((this.TotalLengthField.Equals(value) != true)) {
                    this.TotalLengthField = value;
                    this.RaisePropertyChanged("TotalLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.WebLinkContract[] WebLinks {
            get {
                return this.WebLinksField;
            }
            set {
                if ((object.ReferenceEquals(this.WebLinksField, value) != true)) {
                    this.WebLinksField = value;
                    this.RaisePropertyChanged("WebLinks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WishlistCount {
            get {
                return this.WishlistCountField;
            }
            set {
                if ((this.WishlistCountField.Equals(value) != true)) {
                    this.WishlistCountField = value;
                    this.RaisePropertyChanged("WishlistCount");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DiscType", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.Albums")]
    public enum DiscType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Album = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Single = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EP = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SplitAlbum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Compilation = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Video = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 64,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntryStatus", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain")]
    public enum EntryStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Draft = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Finished = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Approved = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Locked = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntryThumbForApiContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class EntryThumbForApiContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlSmallThumbField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlThumbField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlTinyThumbField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrlSmallThumb {
            get {
                return this.UrlSmallThumbField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlSmallThumbField, value) != true)) {
                    this.UrlSmallThumbField = value;
                    this.RaisePropertyChanged("UrlSmallThumb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrlThumb {
            get {
                return this.UrlThumbField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlThumbField, value) != true)) {
                    this.UrlThumbField = value;
                    this.RaisePropertyChanged("UrlThumb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrlTinyThumb {
            get {
                return this.UrlTinyThumbField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlTinyThumbField, value) != true)) {
                    this.UrlTinyThumbField = value;
                    this.RaisePropertyChanged("UrlTinyThumb");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReleaseEventSeriesContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class ReleaseEventSeriesContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EventCategory CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PictureMimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlSlugField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.WebLinkContract[] WebLinksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalNames {
            get {
                return this.AdditionalNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalNamesField, value) != true)) {
                    this.AdditionalNamesField = value;
                    this.RaisePropertyChanged("AdditionalNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EventCategory Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((this.CategoryField.Equals(value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PictureMime {
            get {
                return this.PictureMimeField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureMimeField, value) != true)) {
                    this.PictureMimeField = value;
                    this.RaisePropertyChanged("PictureMime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrlSlug {
            get {
                return this.UrlSlugField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlSlugField, value) != true)) {
                    this.UrlSlugField = value;
                    this.RaisePropertyChanged("UrlSlug");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.WebLinkContract[] WebLinks {
            get {
                return this.WebLinksField;
            }
            set {
                if ((object.ReferenceEquals(this.WebLinksField, value) != true)) {
                    this.WebLinksField = value;
                    this.RaisePropertyChanged("WebLinks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SongListBaseContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MikuBot.VocaDBConnector.VocaDbServices.SongListContract))]
    public partial class SongListBaseContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.SongListFeaturedCategory FeaturedCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.SongListFeaturedCategory FeaturedCategory {
            get {
                return this.FeaturedCategoryField;
            }
            set {
                if ((this.FeaturedCategoryField.Equals(value) != true)) {
                    this.FeaturedCategoryField = value;
                    this.RaisePropertyChanged("FeaturedCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArtistForEventContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class ArtistForEventContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistContract ArtistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistEventRoles EffectiveRolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistEventRoles RolesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistContract Artist {
            get {
                return this.ArtistField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistField, value) != true)) {
                    this.ArtistField = value;
                    this.RaisePropertyChanged("Artist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistEventRoles EffectiveRoles {
            get {
                return this.EffectiveRolesField;
            }
            set {
                if ((this.EffectiveRolesField.Equals(value) != true)) {
                    this.EffectiveRolesField = value;
                    this.RaisePropertyChanged("EffectiveRoles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistEventRoles Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((this.RolesField.Equals(value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventCategory", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.ReleaseEvents")]
    public enum EventCategory : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unspecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlbumRelease = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Anniversary = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Club = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Concert = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Contest = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Convention = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 64,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalizedStringContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class LocalizedStringContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ContentLanguageSelection LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ContentLanguageSelection Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((this.LanguageField.Equals(value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebLinkForApiContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class WebLinkForApiContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.WebLinkCategory CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.WebLinkCategory Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((this.CategoryField.Equals(value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArtistContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MikuBot.VocaDBConnector.VocaDbServices.ArtistDetailsContract))]
    public partial class ArtistContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistType ArtistTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PictureMimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReleaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalNames {
            get {
                return this.AdditionalNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalNamesField, value) != true)) {
                    this.AdditionalNamesField = value;
                    this.RaisePropertyChanged("AdditionalNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistType ArtistType {
            get {
                return this.ArtistTypeField;
            }
            set {
                if ((this.ArtistTypeField.Equals(value) != true)) {
                    this.ArtistTypeField = value;
                    this.RaisePropertyChanged("ArtistType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PictureMime {
            get {
                return this.PictureMimeField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureMimeField, value) != true)) {
                    this.PictureMimeField = value;
                    this.RaisePropertyChanged("PictureMime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReleaseDate {
            get {
                return this.ReleaseDateField;
            }
            set {
                if ((this.ReleaseDateField.Equals(value) != true)) {
                    this.ReleaseDateField = value;
                    this.RaisePropertyChanged("ReleaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArtistEventRoles", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.ReleaseEvents")]
    public enum ArtistEventRoles : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dancer = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DJ = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Instrumentalist = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Organizer = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Promoter = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VJ = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vocalist = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoiceManipulator = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherPerformer = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 512,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArtistDetailsContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class ArtistDetailsContract : MikuBot.VocaDBConnector.VocaDbServices.ArtistContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.AdvancedArtistStatsContract AdvancedStatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AllNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistContract BaseVoicebankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistContract CharacterDesignerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistContract[] ChildVoicebanksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommentCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EnglishTranslatedString DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DraftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EmailNotificationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistContract[] GroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistContract[] IllustratorOfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistContract[] IllustratorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.AlbumContract[] LatestAlbumsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.CommentForApiContract[] LatestCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ReleaseEventForApiContract[] LatestEventsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.SongForApiContract[] LatestSongsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistContract ManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistContract[] MembersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistContract MergedToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.UserContract[] OwnerUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.PersonalArtistStatsContract PersonalStatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryPictureFileContract[] PicturesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.SharedArtistStatsContract SharedStatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SiteNotificationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.TagUsageForApiContract[] TagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.AlbumContract[] TopAlbumsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.SongForApiContract[] TopSongsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.TranslatedStringContract TranslatedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistContract VoiceProviderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistContract[] VoicebanksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.WebLinkContract[] WebLinksField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.AdvancedArtistStatsContract AdvancedStats {
            get {
                return this.AdvancedStatsField;
            }
            set {
                if ((object.ReferenceEquals(this.AdvancedStatsField, value) != true)) {
                    this.AdvancedStatsField = value;
                    this.RaisePropertyChanged("AdvancedStats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AllNames {
            get {
                return this.AllNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.AllNamesField, value) != true)) {
                    this.AllNamesField = value;
                    this.RaisePropertyChanged("AllNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistContract BaseVoicebank {
            get {
                return this.BaseVoicebankField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseVoicebankField, value) != true)) {
                    this.BaseVoicebankField = value;
                    this.RaisePropertyChanged("BaseVoicebank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistContract CharacterDesigner {
            get {
                return this.CharacterDesignerField;
            }
            set {
                if ((object.ReferenceEquals(this.CharacterDesignerField, value) != true)) {
                    this.CharacterDesignerField = value;
                    this.RaisePropertyChanged("CharacterDesigner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistContract[] ChildVoicebanks {
            get {
                return this.ChildVoicebanksField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildVoicebanksField, value) != true)) {
                    this.ChildVoicebanksField = value;
                    this.RaisePropertyChanged("ChildVoicebanks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommentCount {
            get {
                return this.CommentCountField;
            }
            set {
                if ((this.CommentCountField.Equals(value) != true)) {
                    this.CommentCountField = value;
                    this.RaisePropertyChanged("CommentCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EnglishTranslatedString Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Draft {
            get {
                return this.DraftField;
            }
            set {
                if ((this.DraftField.Equals(value) != true)) {
                    this.DraftField = value;
                    this.RaisePropertyChanged("Draft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EmailNotifications {
            get {
                return this.EmailNotificationsField;
            }
            set {
                if ((this.EmailNotificationsField.Equals(value) != true)) {
                    this.EmailNotificationsField = value;
                    this.RaisePropertyChanged("EmailNotifications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistContract[] Groups {
            get {
                return this.GroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupsField, value) != true)) {
                    this.GroupsField = value;
                    this.RaisePropertyChanged("Groups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistContract[] IllustratorOf {
            get {
                return this.IllustratorOfField;
            }
            set {
                if ((object.ReferenceEquals(this.IllustratorOfField, value) != true)) {
                    this.IllustratorOfField = value;
                    this.RaisePropertyChanged("IllustratorOf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistContract[] Illustrators {
            get {
                return this.IllustratorsField;
            }
            set {
                if ((object.ReferenceEquals(this.IllustratorsField, value) != true)) {
                    this.IllustratorsField = value;
                    this.RaisePropertyChanged("Illustrators");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdded {
            get {
                return this.IsAddedField;
            }
            set {
                if ((this.IsAddedField.Equals(value) != true)) {
                    this.IsAddedField = value;
                    this.RaisePropertyChanged("IsAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.AlbumContract[] LatestAlbums {
            get {
                return this.LatestAlbumsField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestAlbumsField, value) != true)) {
                    this.LatestAlbumsField = value;
                    this.RaisePropertyChanged("LatestAlbums");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.CommentForApiContract[] LatestComments {
            get {
                return this.LatestCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestCommentsField, value) != true)) {
                    this.LatestCommentsField = value;
                    this.RaisePropertyChanged("LatestComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ReleaseEventForApiContract[] LatestEvents {
            get {
                return this.LatestEventsField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestEventsField, value) != true)) {
                    this.LatestEventsField = value;
                    this.RaisePropertyChanged("LatestEvents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.SongForApiContract[] LatestSongs {
            get {
                return this.LatestSongsField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestSongsField, value) != true)) {
                    this.LatestSongsField = value;
                    this.RaisePropertyChanged("LatestSongs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistContract Manager {
            get {
                return this.ManagerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagerField, value) != true)) {
                    this.ManagerField = value;
                    this.RaisePropertyChanged("Manager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistContract[] Members {
            get {
                return this.MembersField;
            }
            set {
                if ((object.ReferenceEquals(this.MembersField, value) != true)) {
                    this.MembersField = value;
                    this.RaisePropertyChanged("Members");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistContract MergedTo {
            get {
                return this.MergedToField;
            }
            set {
                if ((object.ReferenceEquals(this.MergedToField, value) != true)) {
                    this.MergedToField = value;
                    this.RaisePropertyChanged("MergedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.UserContract[] OwnerUsers {
            get {
                return this.OwnerUsersField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerUsersField, value) != true)) {
                    this.OwnerUsersField = value;
                    this.RaisePropertyChanged("OwnerUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.PersonalArtistStatsContract PersonalStats {
            get {
                return this.PersonalStatsField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonalStatsField, value) != true)) {
                    this.PersonalStatsField = value;
                    this.RaisePropertyChanged("PersonalStats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryPictureFileContract[] Pictures {
            get {
                return this.PicturesField;
            }
            set {
                if ((object.ReferenceEquals(this.PicturesField, value) != true)) {
                    this.PicturesField = value;
                    this.RaisePropertyChanged("Pictures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.SharedArtistStatsContract SharedStats {
            get {
                return this.SharedStatsField;
            }
            set {
                if ((object.ReferenceEquals(this.SharedStatsField, value) != true)) {
                    this.SharedStatsField = value;
                    this.RaisePropertyChanged("SharedStats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SiteNotifications {
            get {
                return this.SiteNotificationsField;
            }
            set {
                if ((this.SiteNotificationsField.Equals(value) != true)) {
                    this.SiteNotificationsField = value;
                    this.RaisePropertyChanged("SiteNotifications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.TagUsageForApiContract[] Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.AlbumContract[] TopAlbums {
            get {
                return this.TopAlbumsField;
            }
            set {
                if ((object.ReferenceEquals(this.TopAlbumsField, value) != true)) {
                    this.TopAlbumsField = value;
                    this.RaisePropertyChanged("TopAlbums");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.SongForApiContract[] TopSongs {
            get {
                return this.TopSongsField;
            }
            set {
                if ((object.ReferenceEquals(this.TopSongsField, value) != true)) {
                    this.TopSongsField = value;
                    this.RaisePropertyChanged("TopSongs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.TranslatedStringContract TranslatedName {
            get {
                return this.TranslatedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslatedNameField, value) != true)) {
                    this.TranslatedNameField = value;
                    this.RaisePropertyChanged("TranslatedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistContract VoiceProvider {
            get {
                return this.VoiceProviderField;
            }
            set {
                if ((object.ReferenceEquals(this.VoiceProviderField, value) != true)) {
                    this.VoiceProviderField = value;
                    this.RaisePropertyChanged("VoiceProvider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistContract[] Voicebanks {
            get {
                return this.VoicebanksField;
            }
            set {
                if ((object.ReferenceEquals(this.VoicebanksField, value) != true)) {
                    this.VoicebanksField = value;
                    this.RaisePropertyChanged("Voicebanks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.WebLinkContract[] WebLinks {
            get {
                return this.WebLinksField;
            }
            set {
                if ((object.ReferenceEquals(this.WebLinksField, value) != true)) {
                    this.WebLinksField = value;
                    this.RaisePropertyChanged("WebLinks");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArtistType", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.Artists")]
    public enum ArtistType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Circle = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Label = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Producer = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Animator = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Illustrator = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lyricist = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vocaloid = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UTAU = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CeVIO = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherVoiceSynthesizer = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherVocalist = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherGroup = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherIndividual = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Utaite = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Band = 15,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdvancedArtistStatsContract", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.DataContracts.Artists")]
    [System.SerializableAttribute()]
    public partial class AdvancedArtistStatsContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.TopStatContractOfArtistContractZKwwigZK[] TopVocaloidsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.TopStatContractOfArtistContractZKwwigZK[] TopVocaloids {
            get {
                return this.TopVocaloidsField;
            }
            set {
                if ((object.ReferenceEquals(this.TopVocaloidsField, value) != true)) {
                    this.TopVocaloidsField = value;
                    this.RaisePropertyChanged("TopVocaloids");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnglishTranslatedString", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.Globalization")]
    [System.SerializableAttribute()]
    public partial class EnglishTranslatedString : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnglishField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string English {
            get {
                return this.EnglishField;
            }
            set {
                if ((object.ReferenceEquals(this.EnglishField, value) != true)) {
                    this.EnglishField = value;
                    this.RaisePropertyChanged("English");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Original {
            get {
                return this.OriginalField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalField, value) != true)) {
                    this.OriginalField = value;
                    this.RaisePropertyChanged("Original");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonalArtistStatsContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class PersonalArtistStatsContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SongRatingCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SongRatingCount {
            get {
                return this.SongRatingCountField;
            }
            set {
                if ((this.SongRatingCountField.Equals(value) != true)) {
                    this.SongRatingCountField = value;
                    this.RaisePropertyChanged("SongRatingCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SharedArtistStatsContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class SharedArtistStatsContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlbumCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AlbumRatingAverageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FollowerCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RatedAlbumCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RatedSongCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SongCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlbumCount {
            get {
                return this.AlbumCountField;
            }
            set {
                if ((this.AlbumCountField.Equals(value) != true)) {
                    this.AlbumCountField = value;
                    this.RaisePropertyChanged("AlbumCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AlbumRatingAverage {
            get {
                return this.AlbumRatingAverageField;
            }
            set {
                if ((this.AlbumRatingAverageField.Equals(value) != true)) {
                    this.AlbumRatingAverageField = value;
                    this.RaisePropertyChanged("AlbumRatingAverage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventCount {
            get {
                return this.EventCountField;
            }
            set {
                if ((this.EventCountField.Equals(value) != true)) {
                    this.EventCountField = value;
                    this.RaisePropertyChanged("EventCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FollowerCount {
            get {
                return this.FollowerCountField;
            }
            set {
                if ((this.FollowerCountField.Equals(value) != true)) {
                    this.FollowerCountField = value;
                    this.RaisePropertyChanged("FollowerCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RatedAlbumCount {
            get {
                return this.RatedAlbumCountField;
            }
            set {
                if ((this.RatedAlbumCountField.Equals(value) != true)) {
                    this.RatedAlbumCountField = value;
                    this.RaisePropertyChanged("RatedAlbumCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RatedSongCount {
            get {
                return this.RatedSongCountField;
            }
            set {
                if ((this.RatedSongCountField.Equals(value) != true)) {
                    this.RatedSongCountField = value;
                    this.RaisePropertyChanged("RatedSongCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SongCount {
            get {
                return this.SongCountField;
            }
            set {
                if ((this.SongCountField.Equals(value) != true)) {
                    this.SongCountField = value;
                    this.RaisePropertyChanged("SongCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TranslatedStringContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class TranslatedStringContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ContentLanguageSelection DefaultLanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnglishField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JapaneseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RomajiField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Default {
            get {
                return this.DefaultField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultField, value) != true)) {
                    this.DefaultField = value;
                    this.RaisePropertyChanged("Default");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ContentLanguageSelection DefaultLanguage {
            get {
                return this.DefaultLanguageField;
            }
            set {
                if ((this.DefaultLanguageField.Equals(value) != true)) {
                    this.DefaultLanguageField = value;
                    this.RaisePropertyChanged("DefaultLanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string English {
            get {
                return this.EnglishField;
            }
            set {
                if ((object.ReferenceEquals(this.EnglishField, value) != true)) {
                    this.EnglishField = value;
                    this.RaisePropertyChanged("English");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Japanese {
            get {
                return this.JapaneseField;
            }
            set {
                if ((object.ReferenceEquals(this.JapaneseField, value) != true)) {
                    this.JapaneseField = value;
                    this.RaisePropertyChanged("Japanese");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Romaji {
            get {
                return this.RomajiField;
            }
            set {
                if ((object.ReferenceEquals(this.RomajiField, value) != true)) {
                    this.RomajiField = value;
                    this.RaisePropertyChanged("Romaji");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommentForApiContract", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CommentForApiContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.UserForApiContract AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryRefContract EntryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.UserForApiContract Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorName {
            get {
                return this.AuthorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorNameField, value) != true)) {
                    this.AuthorNameField = value;
                    this.RaisePropertyChanged("AuthorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryRefContract Entry {
            get {
                return this.EntryField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryField, value) != true)) {
                    this.EntryField = value;
                    this.RaisePropertyChanged("Entry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SongForApiContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class SongForApiContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.AlbumContract[] AlbumsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtistStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistForSongContract[] ArtistsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ContentLanguageSelection DefaultNameLanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FavoritedTimesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LengthSecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.LyricsForSongContract[] LyricsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryThumbForApiContract MainPictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MergedToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.LocalizedStringContract[] NamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OriginalVersionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.PVServices PVServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.PVContract[] PVsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PublishDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RatingScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ReleaseEventForApiContract ReleaseEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.SongType SongTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.TagUsageForApiContract[] TagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThumbUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.WebLinkForApiContract[] WebLinksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string AdditionalNames {
            get {
                return this.AdditionalNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalNamesField, value) != true)) {
                    this.AdditionalNamesField = value;
                    this.RaisePropertyChanged("AdditionalNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.AlbumContract[] Albums {
            get {
                return this.AlbumsField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumsField, value) != true)) {
                    this.AlbumsField = value;
                    this.RaisePropertyChanged("Albums");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArtistString {
            get {
                return this.ArtistStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistStringField, value) != true)) {
                    this.ArtistStringField = value;
                    this.RaisePropertyChanged("ArtistString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistForSongContract[] Artists {
            get {
                return this.ArtistsField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistsField, value) != true)) {
                    this.ArtistsField = value;
                    this.RaisePropertyChanged("Artists");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultName {
            get {
                return this.DefaultNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultNameField, value) != true)) {
                    this.DefaultNameField = value;
                    this.RaisePropertyChanged("DefaultName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ContentLanguageSelection DefaultNameLanguage {
            get {
                return this.DefaultNameLanguageField;
            }
            set {
                if ((this.DefaultNameLanguageField.Equals(value) != true)) {
                    this.DefaultNameLanguageField = value;
                    this.RaisePropertyChanged("DefaultNameLanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FavoritedTimes {
            get {
                return this.FavoritedTimesField;
            }
            set {
                if ((this.FavoritedTimesField.Equals(value) != true)) {
                    this.FavoritedTimesField = value;
                    this.RaisePropertyChanged("FavoritedTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LengthSeconds {
            get {
                return this.LengthSecondsField;
            }
            set {
                if ((this.LengthSecondsField.Equals(value) != true)) {
                    this.LengthSecondsField = value;
                    this.RaisePropertyChanged("LengthSeconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.LyricsForSongContract[] Lyrics {
            get {
                return this.LyricsField;
            }
            set {
                if ((object.ReferenceEquals(this.LyricsField, value) != true)) {
                    this.LyricsField = value;
                    this.RaisePropertyChanged("Lyrics");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryThumbForApiContract MainPicture {
            get {
                return this.MainPictureField;
            }
            set {
                if ((object.ReferenceEquals(this.MainPictureField, value) != true)) {
                    this.MainPictureField = value;
                    this.RaisePropertyChanged("MainPicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int MergedTo {
            get {
                return this.MergedToField;
            }
            set {
                if ((this.MergedToField.Equals(value) != true)) {
                    this.MergedToField = value;
                    this.RaisePropertyChanged("MergedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.LocalizedStringContract[] Names {
            get {
                return this.NamesField;
            }
            set {
                if ((object.ReferenceEquals(this.NamesField, value) != true)) {
                    this.NamesField = value;
                    this.RaisePropertyChanged("Names");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int OriginalVersionId {
            get {
                return this.OriginalVersionIdField;
            }
            set {
                if ((this.OriginalVersionIdField.Equals(value) != true)) {
                    this.OriginalVersionIdField = value;
                    this.RaisePropertyChanged("OriginalVersionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.PVServices PVServices {
            get {
                return this.PVServicesField;
            }
            set {
                if ((this.PVServicesField.Equals(value) != true)) {
                    this.PVServicesField = value;
                    this.RaisePropertyChanged("PVServices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.PVContract[] PVs {
            get {
                return this.PVsField;
            }
            set {
                if ((object.ReferenceEquals(this.PVsField, value) != true)) {
                    this.PVsField = value;
                    this.RaisePropertyChanged("PVs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PublishDate {
            get {
                return this.PublishDateField;
            }
            set {
                if ((this.PublishDateField.Equals(value) != true)) {
                    this.PublishDateField = value;
                    this.RaisePropertyChanged("PublishDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RatingScore {
            get {
                return this.RatingScoreField;
            }
            set {
                if ((this.RatingScoreField.Equals(value) != true)) {
                    this.RatingScoreField = value;
                    this.RaisePropertyChanged("RatingScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.ReleaseEventForApiContract ReleaseEvent {
            get {
                return this.ReleaseEventField;
            }
            set {
                if ((object.ReferenceEquals(this.ReleaseEventField, value) != true)) {
                    this.ReleaseEventField = value;
                    this.RaisePropertyChanged("ReleaseEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.SongType SongType {
            get {
                return this.SongTypeField;
            }
            set {
                if ((this.SongTypeField.Equals(value) != true)) {
                    this.SongTypeField = value;
                    this.RaisePropertyChanged("SongType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.TagUsageForApiContract[] Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ThumbUrl {
            get {
                return this.ThumbUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbUrlField, value) != true)) {
                    this.ThumbUrlField = value;
                    this.RaisePropertyChanged("ThumbUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.WebLinkForApiContract[] WebLinks {
            get {
                return this.WebLinksField;
            }
            set {
                if ((object.ReferenceEquals(this.WebLinksField, value) != true)) {
                    this.WebLinksField = value;
                    this.RaisePropertyChanged("WebLinks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class UserContract : MikuBot.VocaDBConnector.VocaDbServices.UserWithEmailContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AnonymousActivityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CultureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ContentLanguagePreference DefaultLanguageSelectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.UserEmailOptions EmailOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.UserGroupId GroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.PVService PreferredVideoServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PublicAlbumCollectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VerifiedArtistField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AnonymousActivity {
            get {
                return this.AnonymousActivityField;
            }
            set {
                if ((this.AnonymousActivityField.Equals(value) != true)) {
                    this.AnonymousActivityField = value;
                    this.RaisePropertyChanged("AnonymousActivity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Culture {
            get {
                return this.CultureField;
            }
            set {
                if ((object.ReferenceEquals(this.CultureField, value) != true)) {
                    this.CultureField = value;
                    this.RaisePropertyChanged("Culture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ContentLanguagePreference DefaultLanguageSelection {
            get {
                return this.DefaultLanguageSelectionField;
            }
            set {
                if ((this.DefaultLanguageSelectionField.Equals(value) != true)) {
                    this.DefaultLanguageSelectionField = value;
                    this.RaisePropertyChanged("DefaultLanguageSelection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.UserEmailOptions EmailOptions {
            get {
                return this.EmailOptionsField;
            }
            set {
                if ((this.EmailOptionsField.Equals(value) != true)) {
                    this.EmailOptionsField = value;
                    this.RaisePropertyChanged("EmailOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.UserGroupId GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((this.GroupIdField.Equals(value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.PVService PreferredVideoService {
            get {
                return this.PreferredVideoServiceField;
            }
            set {
                if ((this.PreferredVideoServiceField.Equals(value) != true)) {
                    this.PreferredVideoServiceField = value;
                    this.RaisePropertyChanged("PreferredVideoService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PublicAlbumCollection {
            get {
                return this.PublicAlbumCollectionField;
            }
            set {
                if ((this.PublicAlbumCollectionField.Equals(value) != true)) {
                    this.PublicAlbumCollectionField = value;
                    this.RaisePropertyChanged("PublicAlbumCollection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VerifiedArtist {
            get {
                return this.VerifiedArtistField;
            }
            set {
                if ((this.VerifiedArtistField.Equals(value) != true)) {
                    this.VerifiedArtistField = value;
                    this.RaisePropertyChanged("VerifiedArtist");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntryPictureFileContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class EntryPictureFileContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryType EntryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OwnerEntryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThumbUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryType EntryType {
            get {
                return this.EntryTypeField;
            }
            set {
                if ((this.EntryTypeField.Equals(value) != true)) {
                    this.EntryTypeField = value;
                    this.RaisePropertyChanged("EntryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mime {
            get {
                return this.MimeField;
            }
            set {
                if ((object.ReferenceEquals(this.MimeField, value) != true)) {
                    this.MimeField = value;
                    this.RaisePropertyChanged("Mime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalFileName {
            get {
                return this.OriginalFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalFileNameField, value) != true)) {
                    this.OriginalFileNameField = value;
                    this.RaisePropertyChanged("OriginalFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OwnerEntryId {
            get {
                return this.OwnerEntryIdField;
            }
            set {
                if ((this.OwnerEntryIdField.Equals(value) != true)) {
                    this.OwnerEntryIdField = value;
                    this.RaisePropertyChanged("OwnerEntryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThumbUrl {
            get {
                return this.ThumbUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbUrlField, value) != true)) {
                    this.ThumbUrlField = value;
                    this.RaisePropertyChanged("ThumbUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagUsageForApiContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class TagUsageForApiContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.TagBaseContract TagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.TagBaseContract Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebLinkContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class WebLinkContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.WebLinkCategory CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionOrUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.WebLinkCategory Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((this.CategoryField.Equals(value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionOrUrl {
            get {
                return this.DescriptionOrUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionOrUrlField, value) != true)) {
                    this.DescriptionOrUrlField = value;
                    this.RaisePropertyChanged("DescriptionOrUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TopStatContractOfArtistContractZKwwigZK", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.DataContracts.Artists")]
    [System.SerializableAttribute()]
    public partial class TopStatContractOfArtistContractZKwwigZK : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistContract DataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistContract Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserForApiContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class UserForApiContract : MikuBot.VocaDBConnector.VocaDbServices.UserBaseContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.UserGroupId GroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.UserKnownLanguageContract[] KnownLanguagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryThumbForApiContract MainPictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MemberSinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.OldUsernameContract[] OldUsernamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VerifiedArtistField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.UserGroupId GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((this.GroupIdField.Equals(value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.UserKnownLanguageContract[] KnownLanguages {
            get {
                return this.KnownLanguagesField;
            }
            set {
                if ((object.ReferenceEquals(this.KnownLanguagesField, value) != true)) {
                    this.KnownLanguagesField = value;
                    this.RaisePropertyChanged("KnownLanguages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryThumbForApiContract MainPicture {
            get {
                return this.MainPictureField;
            }
            set {
                if ((object.ReferenceEquals(this.MainPictureField, value) != true)) {
                    this.MainPictureField = value;
                    this.RaisePropertyChanged("MainPicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MemberSince {
            get {
                return this.MemberSinceField;
            }
            set {
                if ((this.MemberSinceField.Equals(value) != true)) {
                    this.MemberSinceField = value;
                    this.RaisePropertyChanged("MemberSince");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.OldUsernameContract[] OldUsernames {
            get {
                return this.OldUsernamesField;
            }
            set {
                if ((object.ReferenceEquals(this.OldUsernamesField, value) != true)) {
                    this.OldUsernamesField = value;
                    this.RaisePropertyChanged("OldUsernames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VerifiedArtist {
            get {
                return this.VerifiedArtistField;
            }
            set {
                if ((this.VerifiedArtistField.Equals(value) != true)) {
                    this.VerifiedArtistField = value;
                    this.RaisePropertyChanged("VerifiedArtist");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntryRefContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MikuBot.VocaDBConnector.VocaDbServices.EntryRefWithNameContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MikuBot.VocaDBConnector.VocaDbServices.EntryRefWithCommonPropertiesContract))]
    public partial class EntryRefContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryType EntryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryType EntryType {
            get {
                return this.EntryTypeField;
            }
            set {
                if ((this.EntryTypeField.Equals(value) != true)) {
                    this.EntryTypeField = value;
                    this.RaisePropertyChanged("EntryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserBaseContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MikuBot.VocaDBConnector.VocaDbServices.UserWithEmailContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MikuBot.VocaDBConnector.VocaDbServices.UserContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MikuBot.VocaDBConnector.VocaDbServices.UserForApiContract))]
    public partial class UserBaseContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserWithEmailContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MikuBot.VocaDBConnector.VocaDbServices.UserContract))]
    public partial class UserWithEmailContract : MikuBot.VocaDBConnector.VocaDbServices.UserBaseContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserGroupId", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.Users")]
    public enum UserGroupId : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Limited = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Regular = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Trusted = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Moderator = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Admin = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserKnownLanguageContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class UserKnownLanguageContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CultureCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.UserLanguageProficiency ProficiencyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CultureCode {
            get {
                return this.CultureCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CultureCodeField, value) != true)) {
                    this.CultureCodeField = value;
                    this.RaisePropertyChanged("CultureCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.UserLanguageProficiency Proficiency {
            get {
                return this.ProficiencyField;
            }
            set {
                if ((this.ProficiencyField.Equals(value) != true)) {
                    this.ProficiencyField = value;
                    this.RaisePropertyChanged("Proficiency");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OldUsernameContract", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.DataContracts.Users")]
    [System.SerializableAttribute()]
    public partial class OldUsernameContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldName {
            get {
                return this.OldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OldNameField, value) != true)) {
                    this.OldNameField = value;
                    this.RaisePropertyChanged("OldName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContentLanguagePreference", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.Globalization")]
    public enum ContentLanguagePreference : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Japanese = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Romaji = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        English = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserEmailOptions", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.Users")]
    public enum UserEmailOptions : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoEmail = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrivateMessagesFromAdmins = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrivateMessagesFromAll = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PVService", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.PVs")]
    public enum PVService : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NicoNicoDouga = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Youtube = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoundCloud = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vimeo = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Piapro = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bilibili = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        File = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LocalFile = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Creofuga = 256,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserLanguageProficiency", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.Users")]
    public enum UserLanguageProficiency : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Basics = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Intermediate = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Advanced = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Native = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntryRefWithNameContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MikuBot.VocaDBConnector.VocaDbServices.EntryRefWithCommonPropertiesContract))]
    public partial class EntryRefWithNameContract : MikuBot.VocaDBConnector.VocaDbServices.EntryRefContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryNameContract NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryNameContract Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntryRefWithCommonPropertiesContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class EntryRefWithCommonPropertiesContract : MikuBot.VocaDBConnector.VocaDbServices.EntryRefWithNameContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtistStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryTypeNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArtistString {
            get {
                return this.ArtistStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistStringField, value) != true)) {
                    this.ArtistStringField = value;
                    this.RaisePropertyChanged("ArtistString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryTypeName {
            get {
                return this.EntryTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryTypeNameField, value) != true)) {
                    this.EntryTypeNameField = value;
                    this.RaisePropertyChanged("EntryTypeName");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntryType", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain")]
    public enum EntryType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undefined = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Album = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Artist = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiscussionTopic = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PV = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReleaseEvent = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReleaseEventSeries = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Song = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SongList = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tag = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        User = 512,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntryNameContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class EntryNameContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalNames {
            get {
                return this.AdditionalNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalNamesField, value) != true)) {
                    this.AdditionalNamesField = value;
                    this.RaisePropertyChanged("AdditionalNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArtistForSongContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class ArtistForSongContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistContract ArtistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistCategories CategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistRoles EffectiveRolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSupportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistRoles RolesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistContract Artist {
            get {
                return this.ArtistField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistField, value) != true)) {
                    this.ArtistField = value;
                    this.RaisePropertyChanged("Artist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistCategories Categories {
            get {
                return this.CategoriesField;
            }
            set {
                if ((this.CategoriesField.Equals(value) != true)) {
                    this.CategoriesField = value;
                    this.RaisePropertyChanged("Categories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistRoles EffectiveRoles {
            get {
                return this.EffectiveRolesField;
            }
            set {
                if ((this.EffectiveRolesField.Equals(value) != true)) {
                    this.EffectiveRolesField = value;
                    this.RaisePropertyChanged("EffectiveRoles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSupport {
            get {
                return this.IsSupportField;
            }
            set {
                if ((this.IsSupportField.Equals(value) != true)) {
                    this.IsSupportField = value;
                    this.RaisePropertyChanged("IsSupport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistRoles Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((this.RolesField.Equals(value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContentLanguageSelection", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.Globalization")]
    public enum ContentLanguageSelection : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unspecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Japanese = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Romaji = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        English = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LyricsForSongContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class LyricsForSongContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CultureCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.TranslationType TranslationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CultureCode {
            get {
                return this.CultureCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CultureCodeField, value) != true)) {
                    this.CultureCodeField = value;
                    this.RaisePropertyChanged("CultureCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.TranslationType TranslationType {
            get {
                return this.TranslationTypeField;
            }
            set {
                if ((this.TranslationTypeField.Equals(value) != true)) {
                    this.TranslationTypeField = value;
                    this.RaisePropertyChanged("TranslationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="PVServices", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.PVs")]
    public enum PVServices : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NicoNicoDouga = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Youtube = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoundCloud = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vimeo = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Piapro = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bilibili = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        File = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LocalFile = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Creofuga = 256,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PVContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class PVContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.PVExtendedMetadata ExtendedMetadataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PVIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.PVType PVTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PublishDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.PVService ServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThumbUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Disabled {
            get {
                return this.DisabledField;
            }
            set {
                if ((this.DisabledField.Equals(value) != true)) {
                    this.DisabledField = value;
                    this.RaisePropertyChanged("Disabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.PVExtendedMetadata ExtendedMetadata {
            get {
                return this.ExtendedMetadataField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtendedMetadataField, value) != true)) {
                    this.ExtendedMetadataField = value;
                    this.RaisePropertyChanged("ExtendedMetadata");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PVId {
            get {
                return this.PVIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PVIdField, value) != true)) {
                    this.PVIdField = value;
                    this.RaisePropertyChanged("PVId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.PVType PVType {
            get {
                return this.PVTypeField;
            }
            set {
                if ((this.PVTypeField.Equals(value) != true)) {
                    this.PVTypeField = value;
                    this.RaisePropertyChanged("PVType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PublishDate {
            get {
                return this.PublishDateField;
            }
            set {
                if ((this.PublishDateField.Equals(value) != true)) {
                    this.PublishDateField = value;
                    this.RaisePropertyChanged("PublishDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.PVService Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((this.ServiceField.Equals(value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThumbUrl {
            get {
                return this.ThumbUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbUrlField, value) != true)) {
                    this.ThumbUrlField = value;
                    this.RaisePropertyChanged("ThumbUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SongType", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.Songs")]
    public enum SongType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unspecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Original = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Remaster = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Remix = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cover = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Instrumental = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mashup = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MusicPV = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DramaPV = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Live = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 512,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArtistCategories", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.Artists")]
    public enum ArtistCategories : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vocalist = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Producer = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Animator = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Label = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Circle = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Band = 64,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArtistRoles", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.Artists")]
    public enum ArtistRoles : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Animator = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Arranger = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Composer = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Distributor = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Illustrator = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Instrumentalist = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lyricist = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mastering = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Publisher = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vocalist = 512,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoiceManipulator = 1024,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 2048,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mixer = 4096,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Chorus = 8192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Encoder = 16384,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VocalDataProvider = 32768,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TranslationType", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.Globalization")]
    public enum TranslationType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Original = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Romanized = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Translation = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PVExtendedMetadata", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class PVExtendedMetadata : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JsonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Json {
            get {
                return this.JsonField;
            }
            set {
                if ((object.ReferenceEquals(this.JsonField, value) != true)) {
                    this.JsonField = value;
                    this.RaisePropertyChanged("Json");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PVType", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.PVs")]
    public enum PVType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Original = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reprint = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagBaseContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MikuBot.VocaDBConnector.VocaDbServices.TagContract))]
    public partial class TagBaseContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlSlugField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string AdditionalNames {
            get {
                return this.AdditionalNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalNamesField, value) != true)) {
                    this.AdditionalNamesField = value;
                    this.RaisePropertyChanged("AdditionalNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrlSlug {
            get {
                return this.UrlSlugField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlSlugField, value) != true)) {
                    this.UrlSlugField = value;
                    this.RaisePropertyChanged("UrlSlug");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class TagContract : MikuBot.VocaDBConnector.VocaDbServices.TagBaseContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HideFromSuggestionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.TagBaseContract ParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.TagTargetTypes TargetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HideFromSuggestions {
            get {
                return this.HideFromSuggestionsField;
            }
            set {
                if ((this.HideFromSuggestionsField.Equals(value) != true)) {
                    this.HideFromSuggestionsField = value;
                    this.RaisePropertyChanged("HideFromSuggestions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.TagBaseContract Parent {
            get {
                return this.ParentField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentField, value) != true)) {
                    this.ParentField = value;
                    this.RaisePropertyChanged("Parent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.TagTargetTypes Targets {
            get {
                return this.TargetsField;
            }
            set {
                if ((this.TargetsField.Equals(value) != true)) {
                    this.TargetsField = value;
                    this.RaisePropertyChanged("Targets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagTargetTypes", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.Tags")]
    public enum TagTargetTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Album = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Artist = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Song = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlbumArtist = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlbumSong = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArtistSong = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Event = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 1073741823,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebLinkCategory", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.ExtLinks")]
    public enum WebLinkCategory : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Official = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Commercial = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reference = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SongListContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class SongListContract : MikuBot.VocaDBConnector.VocaDbServices.SongListBaseContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.UserWithEmailContract AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanEditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EventDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryThumbContract ThumbField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.UserWithEmailContract Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanEdit {
            get {
                return this.CanEditField;
            }
            set {
                if ((this.CanEditField.Equals(value) != true)) {
                    this.CanEditField = value;
                    this.RaisePropertyChanged("CanEdit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryThumbContract Thumb {
            get {
                return this.ThumbField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbField, value) != true)) {
                    this.ThumbField = value;
                    this.RaisePropertyChanged("Thumb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SongListFeaturedCategory", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.Songs")]
    public enum SongListFeaturedCategory : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Concerts = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VocaloidRanking = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pools = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntryThumbContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class EntryThumbContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryType EntryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryType EntryType {
            get {
                return this.EntryTypeField;
            }
            set {
                if ((this.EntryTypeField.Equals(value) != true)) {
                    this.EntryTypeField = value;
                    this.RaisePropertyChanged("EntryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mime {
            get {
                return this.MimeField;
            }
            set {
                if ((object.ReferenceEquals(this.MimeField, value) != true)) {
                    this.MimeField = value;
                    this.RaisePropertyChanged("Mime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlbumForUserContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class AlbumForUserContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.AlbumContract AlbumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.MediaType MediaTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.PurchaseStatus PurchaseStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.UserContract UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.AlbumContract Album {
            get {
                return this.AlbumField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumField, value) != true)) {
                    this.AlbumField = value;
                    this.RaisePropertyChanged("Album");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.MediaType MediaType {
            get {
                return this.MediaTypeField;
            }
            set {
                if ((this.MediaTypeField.Equals(value) != true)) {
                    this.MediaTypeField = value;
                    this.RaisePropertyChanged("MediaType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.PurchaseStatus PurchaseStatus {
            get {
                return this.PurchaseStatusField;
            }
            set {
                if ((this.PurchaseStatusField.Equals(value) != true)) {
                    this.PurchaseStatusField = value;
                    this.RaisePropertyChanged("PurchaseStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.UserContract User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlbumReleaseContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class AlbumReleaseContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.OptionalDateTimeContract ReleaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ReleaseEventForApiContract ReleaseEventField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatNum {
            get {
                return this.CatNumField;
            }
            set {
                if ((object.ReferenceEquals(this.CatNumField, value) != true)) {
                    this.CatNumField = value;
                    this.RaisePropertyChanged("CatNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.OptionalDateTimeContract ReleaseDate {
            get {
                return this.ReleaseDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ReleaseDateField, value) != true)) {
                    this.ReleaseDateField = value;
                    this.RaisePropertyChanged("ReleaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ReleaseEventForApiContract ReleaseEvent {
            get {
                return this.ReleaseEventField;
            }
            set {
                if ((object.ReferenceEquals(this.ReleaseEventField, value) != true)) {
                    this.ReleaseEventField = value;
                    this.RaisePropertyChanged("ReleaseEvent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArtistForApiContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class ArtistForApiContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistForArtistForApiContract[] ArtistLinksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistForArtistForApiContract[] ArtistLinksReverseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistType ArtistTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistContract BaseVoicebankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ContentLanguageSelection DefaultNameLanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryThumbForApiContract MainPictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MergedToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.LocalizedStringContract[] NamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PictureMimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistRelationsForApi RelationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReleaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.TagUsageForApiContract[] TagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.WebLinkForApiContract[] WebLinksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string AdditionalNames {
            get {
                return this.AdditionalNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalNamesField, value) != true)) {
                    this.AdditionalNamesField = value;
                    this.RaisePropertyChanged("AdditionalNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistForArtistForApiContract[] ArtistLinks {
            get {
                return this.ArtistLinksField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistLinksField, value) != true)) {
                    this.ArtistLinksField = value;
                    this.RaisePropertyChanged("ArtistLinks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistForArtistForApiContract[] ArtistLinksReverse {
            get {
                return this.ArtistLinksReverseField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistLinksReverseField, value) != true)) {
                    this.ArtistLinksReverseField = value;
                    this.RaisePropertyChanged("ArtistLinksReverse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistType ArtistType {
            get {
                return this.ArtistTypeField;
            }
            set {
                if ((this.ArtistTypeField.Equals(value) != true)) {
                    this.ArtistTypeField = value;
                    this.RaisePropertyChanged("ArtistType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistContract BaseVoicebank {
            get {
                return this.BaseVoicebankField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseVoicebankField, value) != true)) {
                    this.BaseVoicebankField = value;
                    this.RaisePropertyChanged("BaseVoicebank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultName {
            get {
                return this.DefaultNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultNameField, value) != true)) {
                    this.DefaultNameField = value;
                    this.RaisePropertyChanged("DefaultName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ContentLanguageSelection DefaultNameLanguage {
            get {
                return this.DefaultNameLanguageField;
            }
            set {
                if ((this.DefaultNameLanguageField.Equals(value) != true)) {
                    this.DefaultNameLanguageField = value;
                    this.RaisePropertyChanged("DefaultNameLanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryThumbForApiContract MainPicture {
            get {
                return this.MainPictureField;
            }
            set {
                if ((object.ReferenceEquals(this.MainPictureField, value) != true)) {
                    this.MainPictureField = value;
                    this.RaisePropertyChanged("MainPicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int MergedTo {
            get {
                return this.MergedToField;
            }
            set {
                if ((this.MergedToField.Equals(value) != true)) {
                    this.MergedToField = value;
                    this.RaisePropertyChanged("MergedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.LocalizedStringContract[] Names {
            get {
                return this.NamesField;
            }
            set {
                if ((object.ReferenceEquals(this.NamesField, value) != true)) {
                    this.NamesField = value;
                    this.RaisePropertyChanged("Names");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PictureMime {
            get {
                return this.PictureMimeField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureMimeField, value) != true)) {
                    this.PictureMimeField = value;
                    this.RaisePropertyChanged("PictureMime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistRelationsForApi Relations {
            get {
                return this.RelationsField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationsField, value) != true)) {
                    this.RelationsField = value;
                    this.RaisePropertyChanged("Relations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReleaseDate {
            get {
                return this.ReleaseDateField;
            }
            set {
                if ((this.ReleaseDateField.Equals(value) != true)) {
                    this.ReleaseDateField = value;
                    this.RaisePropertyChanged("ReleaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.TagUsageForApiContract[] Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.WebLinkForApiContract[] WebLinks {
            get {
                return this.WebLinksField;
            }
            set {
                if ((object.ReferenceEquals(this.WebLinksField, value) != true)) {
                    this.WebLinksField = value;
                    this.RaisePropertyChanged("WebLinks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArtistForAlbumContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class ArtistForAlbumContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistContract ArtistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistCategories CategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistRoles EffectiveRolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSupportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistRoles RolesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistContract Artist {
            get {
                return this.ArtistField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistField, value) != true)) {
                    this.ArtistField = value;
                    this.RaisePropertyChanged("Artist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistCategories Categories {
            get {
                return this.CategoriesField;
            }
            set {
                if ((this.CategoriesField.Equals(value) != true)) {
                    this.CategoriesField = value;
                    this.RaisePropertyChanged("Categories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistRoles EffectiveRoles {
            get {
                return this.EffectiveRolesField;
            }
            set {
                if ((this.EffectiveRolesField.Equals(value) != true)) {
                    this.EffectiveRolesField = value;
                    this.RaisePropertyChanged("EffectiveRoles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSupport {
            get {
                return this.IsSupportField;
            }
            set {
                if ((this.IsSupportField.Equals(value) != true)) {
                    this.IsSupportField = value;
                    this.RaisePropertyChanged("IsSupport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistRoles Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((this.RolesField.Equals(value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlbumDiscPropertiesContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class AlbumDiscPropertiesContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DiscNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.DiscMediaType MediaTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DiscNumber {
            get {
                return this.DiscNumberField;
            }
            set {
                if ((this.DiscNumberField.Equals(value) != true)) {
                    this.DiscNumberField = value;
                    this.RaisePropertyChanged("DiscNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.DiscMediaType MediaType {
            get {
                return this.MediaTypeField;
            }
            set {
                if ((this.MediaTypeField.Equals(value) != true)) {
                    this.MediaTypeField = value;
                    this.RaisePropertyChanged("MediaType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SongInAlbumContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class SongInAlbumContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DiscNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<MikuBot.VocaDBConnector.VocaDbServices.SongVoteRating> RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.SongContract SongField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TrackNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DiscNumber {
            get {
                return this.DiscNumberField;
            }
            set {
                if ((this.DiscNumberField.Equals(value) != true)) {
                    this.DiscNumberField = value;
                    this.RaisePropertyChanged("DiscNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<MikuBot.VocaDBConnector.VocaDbServices.SongVoteRating> Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.SongContract Song {
            get {
                return this.SongField;
            }
            set {
                if ((object.ReferenceEquals(this.SongField, value) != true)) {
                    this.SongField = value;
                    this.RaisePropertyChanged("Song");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TrackNumber {
            get {
                return this.TrackNumberField;
            }
            set {
                if ((this.TrackNumberField.Equals(value) != true)) {
                    this.TrackNumberField = value;
                    this.RaisePropertyChanged("TrackNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaType", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.Users")]
    public enum MediaType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhysicalDisc = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DigitalDownload = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PurchaseStatus", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.Users")]
    public enum PurchaseStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wishlisted = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ordered = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Owned = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DiscMediaType", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.Albums")]
    public enum DiscMediaType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Audio = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Video = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArtistRelationsForApi", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class ArtistRelationsForApi : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.AlbumContract[] LatestAlbumsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ReleaseEventForApiContract[] LatestEventsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.SongForApiContract[] LatestSongsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.AlbumContract[] PopularAlbumsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.SongForApiContract[] PopularSongsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.AlbumContract[] LatestAlbums {
            get {
                return this.LatestAlbumsField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestAlbumsField, value) != true)) {
                    this.LatestAlbumsField = value;
                    this.RaisePropertyChanged("LatestAlbums");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.ReleaseEventForApiContract[] LatestEvents {
            get {
                return this.LatestEventsField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestEventsField, value) != true)) {
                    this.LatestEventsField = value;
                    this.RaisePropertyChanged("LatestEvents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.SongForApiContract[] LatestSongs {
            get {
                return this.LatestSongsField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestSongsField, value) != true)) {
                    this.LatestSongsField = value;
                    this.RaisePropertyChanged("LatestSongs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.AlbumContract[] PopularAlbums {
            get {
                return this.PopularAlbumsField;
            }
            set {
                if ((object.ReferenceEquals(this.PopularAlbumsField, value) != true)) {
                    this.PopularAlbumsField = value;
                    this.RaisePropertyChanged("PopularAlbums");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.SongForApiContract[] PopularSongs {
            get {
                return this.PopularSongsField;
            }
            set {
                if ((object.ReferenceEquals(this.PopularSongsField, value) != true)) {
                    this.PopularSongsField = value;
                    this.RaisePropertyChanged("PopularSongs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArtistForArtistForApiContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class ArtistForArtistForApiContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistContract ArtistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistLinkType LinkTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistContract Artist {
            get {
                return this.ArtistField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistField, value) != true)) {
                    this.ArtistField = value;
                    this.RaisePropertyChanged("Artist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistLinkType LinkType {
            get {
                return this.LinkTypeField;
            }
            set {
                if ((this.LinkTypeField.Equals(value) != true)) {
                    this.LinkTypeField = value;
                    this.RaisePropertyChanged("LinkType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArtistLinkType", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.Artists")]
    public enum ArtistLinkType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CharacterDesigner = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Group = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Illustrator = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manager = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoiceProvider = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SongContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MikuBot.VocaDBConnector.VocaDbServices.SongWithAlbumContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MikuBot.VocaDBConnector.VocaDbServices.SongWithAlbumAndPVsContract))]
    public partial class SongContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtistStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FavoritedTimesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LengthSecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NicoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.PVServices PVServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PublishDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RatingScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.SongType SongTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThumbUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalNames {
            get {
                return this.AdditionalNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalNamesField, value) != true)) {
                    this.AdditionalNamesField = value;
                    this.RaisePropertyChanged("AdditionalNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArtistString {
            get {
                return this.ArtistStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistStringField, value) != true)) {
                    this.ArtistStringField = value;
                    this.RaisePropertyChanged("ArtistString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FavoritedTimes {
            get {
                return this.FavoritedTimesField;
            }
            set {
                if ((this.FavoritedTimesField.Equals(value) != true)) {
                    this.FavoritedTimesField = value;
                    this.RaisePropertyChanged("FavoritedTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LengthSeconds {
            get {
                return this.LengthSecondsField;
            }
            set {
                if ((this.LengthSecondsField.Equals(value) != true)) {
                    this.LengthSecondsField = value;
                    this.RaisePropertyChanged("LengthSeconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NicoId {
            get {
                return this.NicoIdField;
            }
            set {
                if ((object.ReferenceEquals(this.NicoIdField, value) != true)) {
                    this.NicoIdField = value;
                    this.RaisePropertyChanged("NicoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.PVServices PVServices {
            get {
                return this.PVServicesField;
            }
            set {
                if ((this.PVServicesField.Equals(value) != true)) {
                    this.PVServicesField = value;
                    this.RaisePropertyChanged("PVServices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PublishDate {
            get {
                return this.PublishDateField;
            }
            set {
                if ((this.PublishDateField.Equals(value) != true)) {
                    this.PublishDateField = value;
                    this.RaisePropertyChanged("PublishDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RatingScore {
            get {
                return this.RatingScoreField;
            }
            set {
                if ((this.RatingScoreField.Equals(value) != true)) {
                    this.RatingScoreField = value;
                    this.RaisePropertyChanged("RatingScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.SongType SongType {
            get {
                return this.SongTypeField;
            }
            set {
                if ((this.SongTypeField.Equals(value) != true)) {
                    this.SongTypeField = value;
                    this.RaisePropertyChanged("SongType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThumbUrl {
            get {
                return this.ThumbUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbUrlField, value) != true)) {
                    this.ThumbUrlField = value;
                    this.RaisePropertyChanged("ThumbUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SongVoteRating", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.Domain.Songs")]
    public enum SongVoteRating : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dislike = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Like = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Favorite = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SongWithAlbumContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MikuBot.VocaDBConnector.VocaDbServices.SongWithAlbumAndPVsContract))]
    public partial class SongWithAlbumContract : MikuBot.VocaDBConnector.VocaDbServices.SongContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.AlbumContract AlbumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.AlbumContract Album {
            get {
                return this.AlbumField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumField, value) != true)) {
                    this.AlbumField = value;
                    this.RaisePropertyChanged("Album");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SongWithAlbumAndPVsContract", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.DataContracts.Songs")]
    [System.SerializableAttribute()]
    public partial class SongWithAlbumAndPVsContract : MikuBot.VocaDBConnector.VocaDbServices.SongWithAlbumContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.PVContract[] PVsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.PVContract[] PVs {
            get {
                return this.PVsField;
            }
            set {
                if ((object.ReferenceEquals(this.PVsField, value) != true)) {
                    this.PVsField = value;
                    this.RaisePropertyChanged("PVs");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartialFindResultOfEntryForApiContractZKwwigZK", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class PartialFindResultOfEntryForApiContractZKwwigZK : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryForApiContract[] ItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TermField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryForApiContract[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Term {
            get {
                return this.TermField;
            }
            set {
                if ((object.ReferenceEquals(this.TermField, value) != true)) {
                    this.TermField = value;
                    this.RaisePropertyChanged("Term");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntryForApiContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class EntryForApiContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActivityDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtistStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<MikuBot.VocaDBConnector.VocaDbServices.ArtistType> ArtistTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ContentLanguageSelection DefaultNameLanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<MikuBot.VocaDBConnector.VocaDbServices.DiscType> DiscTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryType EntryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<MikuBot.VocaDBConnector.VocaDbServices.EventCategory> EventCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryThumbForApiContract MainPictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.LocalizedStringContract[] NamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.PVContract[] PVsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReleaseEventSeriesNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<MikuBot.VocaDBConnector.VocaDbServices.SongListFeaturedCategory> SongListFeaturedCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<MikuBot.VocaDBConnector.VocaDbServices.SongType> SongTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagCategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.TagUsageForApiContract[] TagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlSlugField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArchivedWebLinkContract[] WebLinksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<System.DateTime> ActivityDate {
            get {
                return this.ActivityDateField;
            }
            set {
                if ((this.ActivityDateField.Equals(value) != true)) {
                    this.ActivityDateField = value;
                    this.RaisePropertyChanged("ActivityDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string AdditionalNames {
            get {
                return this.AdditionalNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalNamesField, value) != true)) {
                    this.AdditionalNamesField = value;
                    this.RaisePropertyChanged("AdditionalNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ArtistString {
            get {
                return this.ArtistStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistStringField, value) != true)) {
                    this.ArtistStringField = value;
                    this.RaisePropertyChanged("ArtistString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<MikuBot.VocaDBConnector.VocaDbServices.ArtistType> ArtistType {
            get {
                return this.ArtistTypeField;
            }
            set {
                if ((this.ArtistTypeField.Equals(value) != true)) {
                    this.ArtistTypeField = value;
                    this.RaisePropertyChanged("ArtistType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultName {
            get {
                return this.DefaultNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultNameField, value) != true)) {
                    this.DefaultNameField = value;
                    this.RaisePropertyChanged("DefaultName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ContentLanguageSelection DefaultNameLanguage {
            get {
                return this.DefaultNameLanguageField;
            }
            set {
                if ((this.DefaultNameLanguageField.Equals(value) != true)) {
                    this.DefaultNameLanguageField = value;
                    this.RaisePropertyChanged("DefaultNameLanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<MikuBot.VocaDBConnector.VocaDbServices.DiscType> DiscType {
            get {
                return this.DiscTypeField;
            }
            set {
                if ((this.DiscTypeField.Equals(value) != true)) {
                    this.DiscTypeField = value;
                    this.RaisePropertyChanged("DiscType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryType EntryType {
            get {
                return this.EntryTypeField;
            }
            set {
                if ((this.EntryTypeField.Equals(value) != true)) {
                    this.EntryTypeField = value;
                    this.RaisePropertyChanged("EntryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<MikuBot.VocaDBConnector.VocaDbServices.EventCategory> EventCategory {
            get {
                return this.EventCategoryField;
            }
            set {
                if ((this.EventCategoryField.Equals(value) != true)) {
                    this.EventCategoryField = value;
                    this.RaisePropertyChanged("EventCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryThumbForApiContract MainPicture {
            get {
                return this.MainPictureField;
            }
            set {
                if ((object.ReferenceEquals(this.MainPictureField, value) != true)) {
                    this.MainPictureField = value;
                    this.RaisePropertyChanged("MainPicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.LocalizedStringContract[] Names {
            get {
                return this.NamesField;
            }
            set {
                if ((object.ReferenceEquals(this.NamesField, value) != true)) {
                    this.NamesField = value;
                    this.RaisePropertyChanged("Names");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.PVContract[] PVs {
            get {
                return this.PVsField;
            }
            set {
                if ((object.ReferenceEquals(this.PVsField, value) != true)) {
                    this.PVsField = value;
                    this.RaisePropertyChanged("PVs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ReleaseEventSeriesName {
            get {
                return this.ReleaseEventSeriesNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReleaseEventSeriesNameField, value) != true)) {
                    this.ReleaseEventSeriesNameField = value;
                    this.RaisePropertyChanged("ReleaseEventSeriesName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<MikuBot.VocaDBConnector.VocaDbServices.SongListFeaturedCategory> SongListFeaturedCategory {
            get {
                return this.SongListFeaturedCategoryField;
            }
            set {
                if ((this.SongListFeaturedCategoryField.Equals(value) != true)) {
                    this.SongListFeaturedCategoryField = value;
                    this.RaisePropertyChanged("SongListFeaturedCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<MikuBot.VocaDBConnector.VocaDbServices.SongType> SongType {
            get {
                return this.SongTypeField;
            }
            set {
                if ((this.SongTypeField.Equals(value) != true)) {
                    this.SongTypeField = value;
                    this.RaisePropertyChanged("SongType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string TagCategoryName {
            get {
                return this.TagCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagCategoryNameField, value) != true)) {
                    this.TagCategoryNameField = value;
                    this.RaisePropertyChanged("TagCategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.TagUsageForApiContract[] Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string UrlSlug {
            get {
                return this.UrlSlugField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlSlugField, value) != true)) {
                    this.UrlSlugField = value;
                    this.RaisePropertyChanged("UrlSlug");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public MikuBot.VocaDBConnector.VocaDbServices.ArchivedWebLinkContract[] WebLinks {
            get {
                return this.WebLinksField;
            }
            set {
                if ((object.ReferenceEquals(this.WebLinksField, value) != true)) {
                    this.WebLinksField = value;
                    this.RaisePropertyChanged("WebLinks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArchivedWebLinkContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class ArchivedWebLinkContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.WebLinkCategory CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.WebLinkCategory Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((this.CategoryField.Equals(value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartialFindResultOfArtistContractZKwwigZK", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class PartialFindResultOfArtistContractZKwwigZK : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistContract[] ItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TermField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistContract[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Term {
            get {
                return this.TermField;
            }
            set {
                if ((object.ReferenceEquals(this.TermField, value) != true)) {
                    this.TermField = value;
                    this.RaisePropertyChanged("Term");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewSongCheckResultContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class NewSongCheckResultContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistContract[] ArtistsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.DuplicateEntryResultContractOfSongMatchPropertyoTF1Br6_P[] MatchesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.SongType SongTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ContentLanguageSelection TitleLanguageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistContract[] Artists {
            get {
                return this.ArtistsField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistsField, value) != true)) {
                    this.ArtistsField = value;
                    this.RaisePropertyChanged("Artists");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.DuplicateEntryResultContractOfSongMatchPropertyoTF1Br6_P[] Matches {
            get {
                return this.MatchesField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchesField, value) != true)) {
                    this.MatchesField = value;
                    this.RaisePropertyChanged("Matches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.SongType SongType {
            get {
                return this.SongTypeField;
            }
            set {
                if ((this.SongTypeField.Equals(value) != true)) {
                    this.SongTypeField = value;
                    this.RaisePropertyChanged("SongType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ContentLanguageSelection TitleLanguage {
            get {
                return this.TitleLanguageField;
            }
            set {
                if ((this.TitleLanguageField.Equals(value) != true)) {
                    this.TitleLanguageField = value;
                    this.RaisePropertyChanged("TitleLanguage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DuplicateEntryResultContractOfSongMatchPropertyoTF1Br6_P", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class DuplicateEntryResultContractOfSongMatchPropertyoTF1Br6_P : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EntryRefWithCommonPropertiesContract EntryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.SongMatchProperty MatchPropertyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EntryRefWithCommonPropertiesContract Entry {
            get {
                return this.EntryField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryField, value) != true)) {
                    this.EntryField = value;
                    this.RaisePropertyChanged("Entry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.SongMatchProperty MatchProperty {
            get {
                return this.MatchPropertyField;
            }
            set {
                if ((this.MatchPropertyField.Equals(value) != true)) {
                    this.MatchPropertyField = value;
                    this.RaisePropertyChanged("MatchProperty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SongMatchProperty", Namespace="http://schemas.datacontract.org/2004/07/VocaDb.Model.DataContracts.Songs")]
    public enum SongMatchProperty : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PV = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Title = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartialFindResultOfSongWithAlbumAndPVsContractoTF1Br6_P", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class PartialFindResultOfSongWithAlbumAndPVsContractoTF1Br6_P : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.SongWithAlbumAndPVsContract[] ItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TermField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.SongWithAlbumAndPVsContract[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Term {
            get {
                return this.TermField;
            }
            set {
                if ((object.ReferenceEquals(this.TermField, value) != true)) {
                    this.TermField = value;
                    this.RaisePropertyChanged("Term");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SongDetailsContract", Namespace="http://vocaloid.eu/schemas/VocaDb")]
    [System.SerializableAttribute()]
    public partial class SongDetailsContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.SongInAlbumContract AlbumSongField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.AlbumContract[] AlbumsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.SongContract[] AlternateVersionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtistStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistForSongContract[] ArtistsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommentCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.CommentForApiContract[] LatestCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LikeCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ListCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.LyricsForSongContract[] LyricsFromParentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.SongContract MergedToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.SongInAlbumContract NextSongField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.EnglishTranslatedString NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.SongForApiContract OriginalVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ArtistForApiContract PersonalDescriptionAuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonalDescriptionTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.SongListBaseContract[] PoolsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.SongInAlbumContract PreviousSongField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.ReleaseEventForApiContract ReleaseEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.SongContract SongField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.SongForApiContract[] SuggestionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.TagUsageForApiContract[] TagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.TranslatedStringContract TranslatedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.SongVoteRating UserRatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.WebLinkContract[] WebLinksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MikuBot.VocaDBConnector.VocaDbServices.PVContract[] pvsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalNames {
            get {
                return this.AdditionalNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalNamesField, value) != true)) {
                    this.AdditionalNamesField = value;
                    this.RaisePropertyChanged("AdditionalNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.SongInAlbumContract AlbumSong {
            get {
                return this.AlbumSongField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumSongField, value) != true)) {
                    this.AlbumSongField = value;
                    this.RaisePropertyChanged("AlbumSong");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.AlbumContract[] Albums {
            get {
                return this.AlbumsField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumsField, value) != true)) {
                    this.AlbumsField = value;
                    this.RaisePropertyChanged("Albums");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.SongContract[] AlternateVersions {
            get {
                return this.AlternateVersionsField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateVersionsField, value) != true)) {
                    this.AlternateVersionsField = value;
                    this.RaisePropertyChanged("AlternateVersions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArtistString {
            get {
                return this.ArtistStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistStringField, value) != true)) {
                    this.ArtistStringField = value;
                    this.RaisePropertyChanged("ArtistString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistForSongContract[] Artists {
            get {
                return this.ArtistsField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistsField, value) != true)) {
                    this.ArtistsField = value;
                    this.RaisePropertyChanged("Artists");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommentCount {
            get {
                return this.CommentCountField;
            }
            set {
                if ((this.CommentCountField.Equals(value) != true)) {
                    this.CommentCountField = value;
                    this.RaisePropertyChanged("CommentCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Hits {
            get {
                return this.HitsField;
            }
            set {
                if ((this.HitsField.Equals(value) != true)) {
                    this.HitsField = value;
                    this.RaisePropertyChanged("Hits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.CommentForApiContract[] LatestComments {
            get {
                return this.LatestCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestCommentsField, value) != true)) {
                    this.LatestCommentsField = value;
                    this.RaisePropertyChanged("LatestComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LikeCount {
            get {
                return this.LikeCountField;
            }
            set {
                if ((this.LikeCountField.Equals(value) != true)) {
                    this.LikeCountField = value;
                    this.RaisePropertyChanged("LikeCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ListCount {
            get {
                return this.ListCountField;
            }
            set {
                if ((this.ListCountField.Equals(value) != true)) {
                    this.ListCountField = value;
                    this.RaisePropertyChanged("ListCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.LyricsForSongContract[] LyricsFromParents {
            get {
                return this.LyricsFromParentsField;
            }
            set {
                if ((object.ReferenceEquals(this.LyricsFromParentsField, value) != true)) {
                    this.LyricsFromParentsField = value;
                    this.RaisePropertyChanged("LyricsFromParents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.SongContract MergedTo {
            get {
                return this.MergedToField;
            }
            set {
                if ((object.ReferenceEquals(this.MergedToField, value) != true)) {
                    this.MergedToField = value;
                    this.RaisePropertyChanged("MergedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.SongInAlbumContract NextSong {
            get {
                return this.NextSongField;
            }
            set {
                if ((object.ReferenceEquals(this.NextSongField, value) != true)) {
                    this.NextSongField = value;
                    this.RaisePropertyChanged("NextSong");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.EnglishTranslatedString Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.SongForApiContract OriginalVersion {
            get {
                return this.OriginalVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalVersionField, value) != true)) {
                    this.OriginalVersionField = value;
                    this.RaisePropertyChanged("OriginalVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistForApiContract PersonalDescriptionAuthor {
            get {
                return this.PersonalDescriptionAuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonalDescriptionAuthorField, value) != true)) {
                    this.PersonalDescriptionAuthorField = value;
                    this.RaisePropertyChanged("PersonalDescriptionAuthor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonalDescriptionText {
            get {
                return this.PersonalDescriptionTextField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonalDescriptionTextField, value) != true)) {
                    this.PersonalDescriptionTextField = value;
                    this.RaisePropertyChanged("PersonalDescriptionText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.SongListBaseContract[] Pools {
            get {
                return this.PoolsField;
            }
            set {
                if ((object.ReferenceEquals(this.PoolsField, value) != true)) {
                    this.PoolsField = value;
                    this.RaisePropertyChanged("Pools");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.SongInAlbumContract PreviousSong {
            get {
                return this.PreviousSongField;
            }
            set {
                if ((object.ReferenceEquals(this.PreviousSongField, value) != true)) {
                    this.PreviousSongField = value;
                    this.RaisePropertyChanged("PreviousSong");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.ReleaseEventForApiContract ReleaseEvent {
            get {
                return this.ReleaseEventField;
            }
            set {
                if ((object.ReferenceEquals(this.ReleaseEventField, value) != true)) {
                    this.ReleaseEventField = value;
                    this.RaisePropertyChanged("ReleaseEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.SongContract Song {
            get {
                return this.SongField;
            }
            set {
                if ((object.ReferenceEquals(this.SongField, value) != true)) {
                    this.SongField = value;
                    this.RaisePropertyChanged("Song");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.SongForApiContract[] Suggestions {
            get {
                return this.SuggestionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SuggestionsField, value) != true)) {
                    this.SuggestionsField = value;
                    this.RaisePropertyChanged("Suggestions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.TagUsageForApiContract[] Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.TranslatedStringContract TranslatedName {
            get {
                return this.TranslatedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslatedNameField, value) != true)) {
                    this.TranslatedNameField = value;
                    this.RaisePropertyChanged("TranslatedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.SongVoteRating UserRating {
            get {
                return this.UserRatingField;
            }
            set {
                if ((this.UserRatingField.Equals(value) != true)) {
                    this.UserRatingField = value;
                    this.RaisePropertyChanged("UserRating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.WebLinkContract[] WebLinks {
            get {
                return this.WebLinksField;
            }
            set {
                if ((object.ReferenceEquals(this.WebLinksField, value) != true)) {
                    this.WebLinksField = value;
                    this.RaisePropertyChanged("WebLinks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MikuBot.VocaDBConnector.VocaDbServices.PVContract[] pvs {
            get {
                return this.pvsField;
            }
            set {
                if ((object.ReferenceEquals(this.pvsField, value) != true)) {
                    this.pvsField = value;
                    this.RaisePropertyChanged("pvs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://vocaloid.eu/schemas/VocaDb", ConfigurationName="VocaDbServices.QueryService")]
    public interface QueryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/FindAlbums", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/FindAlbumsResponse")]
        MikuBot.VocaDBConnector.VocaDbServices.PartialFindResultOfAlbumContractZKwwigZK FindAlbums(string term, int maxResults, MikuBot.VocaDBConnector.VocaDbServices.NameMatchMode nameMatchMode, MikuBot.VocaDBConnector.VocaDbServices.AlbumSortRule sort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/FindAlbums", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/FindAlbumsResponse")]
        System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.PartialFindResultOfAlbumContractZKwwigZK> FindAlbumsAsync(string term, int maxResults, MikuBot.VocaDBConnector.VocaDbServices.NameMatchMode nameMatchMode, MikuBot.VocaDBConnector.VocaDbServices.AlbumSortRule sort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/FindAlbumsAdvanced", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/FindAlbumsAdvancedResponse")]
        MikuBot.VocaDBConnector.VocaDbServices.PartialFindResultOfAlbumContractZKwwigZK FindAlbumsAdvanced(string term, int maxResults);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/FindAlbumsAdvanced", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/FindAlbumsAdvancedResponse")]
        System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.PartialFindResultOfAlbumContractZKwwigZK> FindAlbumsAdvancedAsync(string term, int maxResults);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/FindAll", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/FindAllResponse")]
        MikuBot.VocaDBConnector.VocaDbServices.PartialFindResultOfEntryForApiContractZKwwigZK FindAll(string term, int maxResults, MikuBot.VocaDBConnector.VocaDbServices.ContentLanguagePreference languagePreference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/FindAll", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/FindAllResponse")]
        System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.PartialFindResultOfEntryForApiContractZKwwigZK> FindAllAsync(string term, int maxResults, MikuBot.VocaDBConnector.VocaDbServices.ContentLanguagePreference languagePreference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/FindArtists", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/FindArtistsResponse")]
        MikuBot.VocaDBConnector.VocaDbServices.PartialFindResultOfArtistContractZKwwigZK FindArtists(string term, int maxResults, MikuBot.VocaDBConnector.VocaDbServices.NameMatchMode nameMatchMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/FindArtists", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/FindArtistsResponse")]
        System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.PartialFindResultOfArtistContractZKwwigZK> FindArtistsAsync(string term, int maxResults, MikuBot.VocaDBConnector.VocaDbServices.NameMatchMode nameMatchMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/FindDuplicate", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/FindDuplicateResponse")]
        MikuBot.VocaDBConnector.VocaDbServices.NewSongCheckResultContract FindDuplicate(string[] names, string[] pvs, int[] artistIds, bool getPVInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/FindDuplicate", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/FindDuplicateResponse")]
        System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.NewSongCheckResultContract> FindDuplicateAsync(string[] names, string[] pvs, int[] artistIds, bool getPVInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/FindSongs", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/FindSongsResponse")]
        MikuBot.VocaDBConnector.VocaDbServices.PartialFindResultOfSongWithAlbumAndPVsContractoTF1Br6_P FindSongs(string term, int maxResults, MikuBot.VocaDBConnector.VocaDbServices.NameMatchMode nameMatchMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/FindSongs", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/FindSongsResponse")]
        System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.PartialFindResultOfSongWithAlbumAndPVsContractoTF1Br6_P> FindSongsAsync(string term, int maxResults, MikuBot.VocaDBConnector.VocaDbServices.NameMatchMode nameMatchMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/FindTags", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/FindTagsResponse")]
        string[] FindTags(string term, int maxResults);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/FindTags", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/FindTagsResponse")]
        System.Threading.Tasks.Task<string[]> FindTagsAsync(string term, int maxResults);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetAlbumDetails", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetAlbumDetailsResponse")]
        MikuBot.VocaDBConnector.VocaDbServices.AlbumContract GetAlbumDetails(string term, MikuBot.VocaDBConnector.VocaDbServices.AlbumSortRule sort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetAlbumDetails", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetAlbumDetailsResponse")]
        System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.AlbumContract> GetAlbumDetailsAsync(string term, MikuBot.VocaDBConnector.VocaDbServices.AlbumSortRule sort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetAlbumById", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetAlbumByIdResponse")]
        MikuBot.VocaDBConnector.VocaDbServices.AlbumDetailsContract GetAlbumById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetAlbumById", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetAlbumByIdResponse")]
        System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.AlbumDetailsContract> GetAlbumByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetArtistDetails", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetArtistDetailsResponse")]
        MikuBot.VocaDBConnector.VocaDbServices.ArtistDetailsContract GetArtistDetails(string term);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetArtistDetails", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetArtistDetailsResponse")]
        System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.ArtistDetailsContract> GetArtistDetailsAsync(string term);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetArtistById", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetArtistByIdResponse")]
        MikuBot.VocaDBConnector.VocaDbServices.ArtistDetailsContract GetArtistById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetArtistById", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetArtistByIdResponse")]
        System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.ArtistDetailsContract> GetArtistByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetArtistsWithYoutubeChannels", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetArtistsWithYoutubeChannelsRespo" +
            "nse")]
        MikuBot.VocaDBConnector.VocaDbServices.ArtistForApiContract[] GetArtistsWithYoutubeChannels(MikuBot.VocaDBConnector.VocaDbServices.ContentLanguagePreference languagePreference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetArtistsWithYoutubeChannels", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetArtistsWithYoutubeChannelsRespo" +
            "nse")]
        System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.ArtistForApiContract[]> GetArtistsWithYoutubeChannelsAsync(MikuBot.VocaDBConnector.VocaDbServices.ContentLanguagePreference languagePreference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetSongById", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetSongByIdResponse")]
        MikuBot.VocaDBConnector.VocaDbServices.SongDetailsContract GetSongById(int id, System.Nullable<MikuBot.VocaDBConnector.VocaDbServices.ContentLanguagePreference> language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetSongById", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetSongByIdResponse")]
        System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.SongDetailsContract> GetSongByIdAsync(int id, System.Nullable<MikuBot.VocaDBConnector.VocaDbServices.ContentLanguagePreference> language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetSongDetailsByNameArtistAndAlbum" +
            "", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetSongDetailsByNameArtistAndAlbum" +
            "Response")]
        MikuBot.VocaDBConnector.VocaDbServices.SongDetailsContract GetSongDetailsByNameArtistAndAlbum(string name, string artist, string album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetSongDetailsByNameArtistAndAlbum" +
            "", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetSongDetailsByNameArtistAndAlbum" +
            "Response")]
        System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.SongDetailsContract> GetSongDetailsByNameArtistAndAlbumAsync(string name, string artist, string album);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetSongDetails", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetSongDetailsResponse")]
        MikuBot.VocaDBConnector.VocaDbServices.SongDetailsContract GetSongDetails(string term, System.Nullable<MikuBot.VocaDBConnector.VocaDbServices.ContentLanguagePreference> language, MikuBot.VocaDBConnector.VocaDbServices.NameMatchMode matchMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetSongDetails", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetSongDetailsResponse")]
        System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.SongDetailsContract> GetSongDetailsAsync(string term, System.Nullable<MikuBot.VocaDBConnector.VocaDbServices.ContentLanguagePreference> language, MikuBot.VocaDBConnector.VocaDbServices.NameMatchMode matchMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetSongListById", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetSongListByIdResponse")]
        MikuBot.VocaDBConnector.VocaDbServices.SongListContract GetSongListById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetSongListById", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetSongListByIdResponse")]
        System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.SongListContract> GetSongListByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetTagById", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetTagByIdResponse")]
        MikuBot.VocaDBConnector.VocaDbServices.TagContract GetTagById(int id, System.Nullable<MikuBot.VocaDBConnector.VocaDbServices.ContentLanguagePreference> language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetTagById", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetTagByIdResponse")]
        System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.TagContract> GetTagByIdAsync(int id, System.Nullable<MikuBot.VocaDBConnector.VocaDbServices.ContentLanguagePreference> language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetTagByName", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetTagByNameResponse")]
        MikuBot.VocaDBConnector.VocaDbServices.TagContract GetTagByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetTagByName", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetTagByNameResponse")]
        System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.TagContract> GetTagByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetUserInfo", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetUserInfoResponse")]
        MikuBot.VocaDBConnector.VocaDbServices.UserContract GetUserInfo(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetUserInfo", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetUserInfoResponse")]
        System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.UserContract> GetUserInfoAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetAlbumByLinkUrl", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetAlbumByLinkUrlResponse")]
        MikuBot.VocaDBConnector.VocaDbServices.AlbumContract GetAlbumByLinkUrl(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetAlbumByLinkUrl", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetAlbumByLinkUrlResponse")]
        System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.AlbumContract> GetAlbumByLinkUrlAsync(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetRandomSongLyrics", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetRandomSongLyricsResponse")]
        MikuBot.VocaDBConnector.VocaDbServices.LyricsForSongContract GetRandomSongLyrics(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetRandomSongLyrics", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetRandomSongLyricsResponse")]
        System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.LyricsForSongContract> GetRandomSongLyricsAsync(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetSongWithPV", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetSongWithPVResponse")]
        MikuBot.VocaDBConnector.VocaDbServices.SongWithAlbumContract GetSongWithPV(MikuBot.VocaDBConnector.VocaDbServices.PVService service, string pvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetSongWithPV", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetSongWithPVResponse")]
        System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.SongWithAlbumContract> GetSongWithPVAsync(MikuBot.VocaDBConnector.VocaDbServices.PVService service, string pvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetUser", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetUserResponse")]
        MikuBot.VocaDBConnector.VocaDbServices.UserContract GetUser(string name, string accessKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://vocaloid.eu/schemas/VocaDb/QueryService/GetUser", ReplyAction="http://vocaloid.eu/schemas/VocaDb/QueryService/GetUserResponse")]
        System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.UserContract> GetUserAsync(string name, string accessKey);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface QueryServiceChannel : MikuBot.VocaDBConnector.VocaDbServices.QueryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryServiceClient : System.ServiceModel.ClientBase<MikuBot.VocaDBConnector.VocaDbServices.QueryService>, MikuBot.VocaDBConnector.VocaDbServices.QueryService {
        
        public QueryServiceClient() {
        }
        
        public QueryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QueryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QueryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QueryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MikuBot.VocaDBConnector.VocaDbServices.PartialFindResultOfAlbumContractZKwwigZK FindAlbums(string term, int maxResults, MikuBot.VocaDBConnector.VocaDbServices.NameMatchMode nameMatchMode, MikuBot.VocaDBConnector.VocaDbServices.AlbumSortRule sort) {
            return base.Channel.FindAlbums(term, maxResults, nameMatchMode, sort);
        }
        
        public System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.PartialFindResultOfAlbumContractZKwwigZK> FindAlbumsAsync(string term, int maxResults, MikuBot.VocaDBConnector.VocaDbServices.NameMatchMode nameMatchMode, MikuBot.VocaDBConnector.VocaDbServices.AlbumSortRule sort) {
            return base.Channel.FindAlbumsAsync(term, maxResults, nameMatchMode, sort);
        }
        
        public MikuBot.VocaDBConnector.VocaDbServices.PartialFindResultOfAlbumContractZKwwigZK FindAlbumsAdvanced(string term, int maxResults) {
            return base.Channel.FindAlbumsAdvanced(term, maxResults);
        }
        
        public System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.PartialFindResultOfAlbumContractZKwwigZK> FindAlbumsAdvancedAsync(string term, int maxResults) {
            return base.Channel.FindAlbumsAdvancedAsync(term, maxResults);
        }
        
        public MikuBot.VocaDBConnector.VocaDbServices.PartialFindResultOfEntryForApiContractZKwwigZK FindAll(string term, int maxResults, MikuBot.VocaDBConnector.VocaDbServices.ContentLanguagePreference languagePreference) {
            return base.Channel.FindAll(term, maxResults, languagePreference);
        }
        
        public System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.PartialFindResultOfEntryForApiContractZKwwigZK> FindAllAsync(string term, int maxResults, MikuBot.VocaDBConnector.VocaDbServices.ContentLanguagePreference languagePreference) {
            return base.Channel.FindAllAsync(term, maxResults, languagePreference);
        }
        
        public MikuBot.VocaDBConnector.VocaDbServices.PartialFindResultOfArtistContractZKwwigZK FindArtists(string term, int maxResults, MikuBot.VocaDBConnector.VocaDbServices.NameMatchMode nameMatchMode) {
            return base.Channel.FindArtists(term, maxResults, nameMatchMode);
        }
        
        public System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.PartialFindResultOfArtistContractZKwwigZK> FindArtistsAsync(string term, int maxResults, MikuBot.VocaDBConnector.VocaDbServices.NameMatchMode nameMatchMode) {
            return base.Channel.FindArtistsAsync(term, maxResults, nameMatchMode);
        }
        
        public MikuBot.VocaDBConnector.VocaDbServices.NewSongCheckResultContract FindDuplicate(string[] names, string[] pvs, int[] artistIds, bool getPVInfo) {
            return base.Channel.FindDuplicate(names, pvs, artistIds, getPVInfo);
        }
        
        public System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.NewSongCheckResultContract> FindDuplicateAsync(string[] names, string[] pvs, int[] artistIds, bool getPVInfo) {
            return base.Channel.FindDuplicateAsync(names, pvs, artistIds, getPVInfo);
        }
        
        public MikuBot.VocaDBConnector.VocaDbServices.PartialFindResultOfSongWithAlbumAndPVsContractoTF1Br6_P FindSongs(string term, int maxResults, MikuBot.VocaDBConnector.VocaDbServices.NameMatchMode nameMatchMode) {
            return base.Channel.FindSongs(term, maxResults, nameMatchMode);
        }
        
        public System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.PartialFindResultOfSongWithAlbumAndPVsContractoTF1Br6_P> FindSongsAsync(string term, int maxResults, MikuBot.VocaDBConnector.VocaDbServices.NameMatchMode nameMatchMode) {
            return base.Channel.FindSongsAsync(term, maxResults, nameMatchMode);
        }
        
        public string[] FindTags(string term, int maxResults) {
            return base.Channel.FindTags(term, maxResults);
        }
        
        public System.Threading.Tasks.Task<string[]> FindTagsAsync(string term, int maxResults) {
            return base.Channel.FindTagsAsync(term, maxResults);
        }
        
        public MikuBot.VocaDBConnector.VocaDbServices.AlbumContract GetAlbumDetails(string term, MikuBot.VocaDBConnector.VocaDbServices.AlbumSortRule sort) {
            return base.Channel.GetAlbumDetails(term, sort);
        }
        
        public System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.AlbumContract> GetAlbumDetailsAsync(string term, MikuBot.VocaDBConnector.VocaDbServices.AlbumSortRule sort) {
            return base.Channel.GetAlbumDetailsAsync(term, sort);
        }
        
        public MikuBot.VocaDBConnector.VocaDbServices.AlbumDetailsContract GetAlbumById(int id) {
            return base.Channel.GetAlbumById(id);
        }
        
        public System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.AlbumDetailsContract> GetAlbumByIdAsync(int id) {
            return base.Channel.GetAlbumByIdAsync(id);
        }
        
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistDetailsContract GetArtistDetails(string term) {
            return base.Channel.GetArtistDetails(term);
        }
        
        public System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.ArtistDetailsContract> GetArtistDetailsAsync(string term) {
            return base.Channel.GetArtistDetailsAsync(term);
        }
        
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistDetailsContract GetArtistById(int id) {
            return base.Channel.GetArtistById(id);
        }
        
        public System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.ArtistDetailsContract> GetArtistByIdAsync(int id) {
            return base.Channel.GetArtistByIdAsync(id);
        }
        
        public MikuBot.VocaDBConnector.VocaDbServices.ArtistForApiContract[] GetArtistsWithYoutubeChannels(MikuBot.VocaDBConnector.VocaDbServices.ContentLanguagePreference languagePreference) {
            return base.Channel.GetArtistsWithYoutubeChannels(languagePreference);
        }
        
        public System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.ArtistForApiContract[]> GetArtistsWithYoutubeChannelsAsync(MikuBot.VocaDBConnector.VocaDbServices.ContentLanguagePreference languagePreference) {
            return base.Channel.GetArtistsWithYoutubeChannelsAsync(languagePreference);
        }
        
        public MikuBot.VocaDBConnector.VocaDbServices.SongDetailsContract GetSongById(int id, System.Nullable<MikuBot.VocaDBConnector.VocaDbServices.ContentLanguagePreference> language) {
            return base.Channel.GetSongById(id, language);
        }
        
        public System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.SongDetailsContract> GetSongByIdAsync(int id, System.Nullable<MikuBot.VocaDBConnector.VocaDbServices.ContentLanguagePreference> language) {
            return base.Channel.GetSongByIdAsync(id, language);
        }
        
        public MikuBot.VocaDBConnector.VocaDbServices.SongDetailsContract GetSongDetailsByNameArtistAndAlbum(string name, string artist, string album) {
            return base.Channel.GetSongDetailsByNameArtistAndAlbum(name, artist, album);
        }
        
        public System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.SongDetailsContract> GetSongDetailsByNameArtistAndAlbumAsync(string name, string artist, string album) {
            return base.Channel.GetSongDetailsByNameArtistAndAlbumAsync(name, artist, album);
        }
        
        public MikuBot.VocaDBConnector.VocaDbServices.SongDetailsContract GetSongDetails(string term, System.Nullable<MikuBot.VocaDBConnector.VocaDbServices.ContentLanguagePreference> language, MikuBot.VocaDBConnector.VocaDbServices.NameMatchMode matchMode) {
            return base.Channel.GetSongDetails(term, language, matchMode);
        }
        
        public System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.SongDetailsContract> GetSongDetailsAsync(string term, System.Nullable<MikuBot.VocaDBConnector.VocaDbServices.ContentLanguagePreference> language, MikuBot.VocaDBConnector.VocaDbServices.NameMatchMode matchMode) {
            return base.Channel.GetSongDetailsAsync(term, language, matchMode);
        }
        
        public MikuBot.VocaDBConnector.VocaDbServices.SongListContract GetSongListById(int id) {
            return base.Channel.GetSongListById(id);
        }
        
        public System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.SongListContract> GetSongListByIdAsync(int id) {
            return base.Channel.GetSongListByIdAsync(id);
        }
        
        public MikuBot.VocaDBConnector.VocaDbServices.TagContract GetTagById(int id, System.Nullable<MikuBot.VocaDBConnector.VocaDbServices.ContentLanguagePreference> language) {
            return base.Channel.GetTagById(id, language);
        }
        
        public System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.TagContract> GetTagByIdAsync(int id, System.Nullable<MikuBot.VocaDBConnector.VocaDbServices.ContentLanguagePreference> language) {
            return base.Channel.GetTagByIdAsync(id, language);
        }
        
        public MikuBot.VocaDBConnector.VocaDbServices.TagContract GetTagByName(string name) {
            return base.Channel.GetTagByName(name);
        }
        
        public System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.TagContract> GetTagByNameAsync(string name) {
            return base.Channel.GetTagByNameAsync(name);
        }
        
        public MikuBot.VocaDBConnector.VocaDbServices.UserContract GetUserInfo(string name) {
            return base.Channel.GetUserInfo(name);
        }
        
        public System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.UserContract> GetUserInfoAsync(string name) {
            return base.Channel.GetUserInfoAsync(name);
        }
        
        public MikuBot.VocaDBConnector.VocaDbServices.AlbumContract GetAlbumByLinkUrl(string url) {
            return base.Channel.GetAlbumByLinkUrl(url);
        }
        
        public System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.AlbumContract> GetAlbumByLinkUrlAsync(string url) {
            return base.Channel.GetAlbumByLinkUrlAsync(url);
        }
        
        public MikuBot.VocaDBConnector.VocaDbServices.LyricsForSongContract GetRandomSongLyrics(string query) {
            return base.Channel.GetRandomSongLyrics(query);
        }
        
        public System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.LyricsForSongContract> GetRandomSongLyricsAsync(string query) {
            return base.Channel.GetRandomSongLyricsAsync(query);
        }
        
        public MikuBot.VocaDBConnector.VocaDbServices.SongWithAlbumContract GetSongWithPV(MikuBot.VocaDBConnector.VocaDbServices.PVService service, string pvId) {
            return base.Channel.GetSongWithPV(service, pvId);
        }
        
        public System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.SongWithAlbumContract> GetSongWithPVAsync(MikuBot.VocaDBConnector.VocaDbServices.PVService service, string pvId) {
            return base.Channel.GetSongWithPVAsync(service, pvId);
        }
        
        public MikuBot.VocaDBConnector.VocaDbServices.UserContract GetUser(string name, string accessKey) {
            return base.Channel.GetUser(name, accessKey);
        }
        
        public System.Threading.Tasks.Task<MikuBot.VocaDBConnector.VocaDbServices.UserContract> GetUserAsync(string name, string accessKey) {
            return base.Channel.GetUserAsync(name, accessKey);
        }
    }
}
